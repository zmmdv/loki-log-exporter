name: Build and Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # Required for creating releases and tags
      issues: write      # Required for creating issues
      pull-requests: write # Required for commenting on PRs
      packages: write    # Required for publishing packages
    outputs:
      new_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: |
          npm init -y
          npm install -D semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/exec
          npm install

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com

      - name: Show outputs
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "Version: ${{ steps.semantic.outputs.new_release_version }}"
          echo "Major: ${{ steps.semantic.outputs.new_release_major_version }}"
          echo "Minor: ${{ steps.semantic.outputs.new_release_minor_version }}"
          echo "Patch: ${{ steps.semantic.outputs.new_release_patch_version }}"

  build-and-push:
    needs: semantic-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ needs.semantic-release.outputs.new_version }},enable=${{ needs.semantic-release.outputs.new_release_published == 'true' }}
            type=sha,prefix=,format=short,enable=${{ needs.semantic-release.outputs.new_release_published != 'true' }}

      - name: Debug tag information
        run: |
          echo "New version: ${{ needs.semantic-release.outputs.new_version }}"
          echo "Release published: ${{ needs.semantic-release.outputs.new_release_published }}"
          echo "Tags to be applied: ${{ steps.meta.outputs.tags }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max